- base.context:
    experiment:
      id: TEST
      description: A new ECE4 experiment

      schedule:
        all: !rrule >
          DTSTART:19900101
          RRULE:FREQ=MONTHLY;UNTIL=20000101
        nlegs: 1

      # If true, remove the rundir folder before starting the experiment (if it exists)
      # Please note that this will disable the job.resubmit option
      # To be used only for development purposes
      run_from_scratch: false

      nemo:
        start_from:
          # Chose ONE of the options below:
          # 1) Cold start
          #    Do not fill in any of the parameters below
          # 2) Start from initialisation of temperature and salinity (ts)
          #    Set 'ts_state.file' with the path to a NetCDF file that contains the 3D
          #    temperature (thetao) and salinity (so) fields. Optionally, set
          #    'ts_state.weight_file' if the ts_state.file needs to be interpolated.
          #    For the provided WOA Levitus climatology use 'ts_state.file: woa13-levitus.nc'
          #    and 'ts_state.weight_file: weights_WOA13d1_2_eORCA1_bilinear.nc'
          # 3) Start from global restart files
          #    Set 'restart.dir' where the 'restart.nc' (oce), 'restart_ice.nc' (ice) and
          #    'restart_trc.nc' (pisces/top) files are located
          ts_state:
            file:
            weight_file:
          restart:
            dir:

      # Configure CMIP, oifs and nemo forcings
      forcing:
      
        # Configure CMIP forcings
        cmip: false
          #   sets NCMIPFIXYR in the NAMECECMIP6 namelist
          #   default: -1
          # fixyear: -1

        # Configure oifs forcings (e.g. orbital forcing)
        oifs:
          orbital:
            #   sets ORBMODE in the NAMORB namelists
            #   default: variable_year
            # mode: variable_year
            #   sets ORBIY in the NAMORB namelists
            #   default: experiment.schedule.start.year
            # year:

        # Configure nemo forcing
        nemo:
          ssr:
            # Surface restoring will be activated when `data` is not empty
            data:  # e.g. 's5' refers to ORAS5 dataset available at HPC2020 and MN5
            # Coefficients for sea surface temperature and salinity restoring. Set to 0 if not a negative number
            sstr_coeff:  # when a negative float, e.g. -40.0,   activate SST restoring: nn_sstr=1 with rn_dqdt={{sstr_coeff}}.
            sssr_coeff:  # when a negative float, e.g. -166.67, activate SSS restoring: nn_sssr=2 with rn_deds={{sssr_coeff}}.
            # Conventions for target data location, filenames, and variables within them. 
            # If empty/undefined, default conventions are used. See scripts/runtime/scriptlib/config-nemo.yml
            conventions: # e.g. !noparse "{{model_config.nemo.all_forcings.default_srr_conventions}}"
          # PISCES forcings
          co2: # if a number -- constant pCO2; if a string -- file with pCO2 data; if empty -- read atcco2.txt

        # Atmospheric forcing for nemo-standalone simulations
        nemo_only:
          # Select one of the available forcing sets or define your own. Available sets are:
          # * CoreII_interannual (provided in the official inidata);
          # * ERA5_HRES (available on HPC2020 and MN5)
          # * JRA55_1.5 (available on MN5)
          # Conventions for location and names of atmospheric forcing files and variables within them
          # are defined in scripts/runtime/scriptlib/config-nemo-only.yml and a matching namelist template
          atmospheric: !noparse "{{model_config.nemo.all_forcings.CoreII_interannual}}"
          fixed_year: true  # true for a climatology, false for yearly varying or integer year for fixed-year forcing (e.g. 2000)

      monitoring:
        activate: false
        reference_vals:
          # Provide reference values to be shown with the time series
          # Example values are for present day climate, change for pre-industrial
          # Comment any line (or set its key value=None) to disable the reference value feature
          # Optional key "label" describes the origin of the reference value
          tas: {"value": 14.4, "label": "ERA5 (1991-2020)"}
          pr:  {"value": 2.93, "label": "ERA5 (1991-2020)"}
          psl: {"value": 101143, "label": "ERA5 (1991-2020)"}
          tos: {"value": 18.65, "label": "HadISST (1991-2020)"}
      
      # Configure ECmean4 diagnostics for model tuning and evaluation
      # 'global_mean' activates the Global Mean diagnostics https://ecmean4.readthedocs.io/en/latest/globalmean.html
      # 'performance_indices' activates Reicher and Kim (2008) Performance Indices https://ecmean4.readthedocs.io/en/latest/performanceindices.html
      # Further configuration is available in templates/ecmean/config-ecmean.j2
      # "Frequency" is the number of years between each ECmean4 run
      # "Year1" and "Year2" are the years to be used in the ECmean4 run
      # Options are not conflicting, and if possible can be used together
      # If None is defined, the default is to run on the entire experiment period
      ecmean:
        activate: false
        diags: ['global_mean', 'performance_indices']
        frequency: 
        year1: 
        year2:

    model_config:
      components: [oifs, amipfr, xios, oasis]

      oifs:
        grid: !noparse "{{model_config.oifs.all_grids.TL159L91}}"

      oasis:
        # OASIS debug options, refer to Section 3.2 (p. 43-44) of sources/oasis3-mct-5.2/oasis3-mct-5/doc/oasis3mct_UserGuide.pdf
        debug_mode: 0  # 0 by default, accepted values: 0, 1, 2, 5, 10, 12, 15, 20, 30. Greater means larger verbosity.
        time_statistics: 0  # 0 by default, accepted values: 0, 1, 2, 3. Greater means more statistics. 
        load_balancing: 0  # 0 by default, accepted values: 0, 1. 1 activate load balancing evaluation


    job:
      # Configure launch method, one of:
      #   slurm-hetjob  # SLURM heterogeneous job
      #   slurm-mp-taskset  # SLURM srun with multi-prog, hostfile and taskset
      #   slurm-wrapper-taskset  # SLURM srun with wrapper, hostfile and taskset
      #   slurm-shell  # SLURM + generic shell script template (needs job.launch.shell.script)
      # For configuration of the respective method, see next section!
      launch:
        method: slurm-wrapper-taskset

      # If true, the job will resubmit itself to run a further leg
      resubmit: true

      slurm:
        sbatch:
          opts:
            account: "spitsozz"      
            time: 135
            output: !noparse "{{experiment.id}}.log"
            job-name: !noparse "ECE4_{{experiment.id}}"
            qos: "np"
            ntasks-per-core: 1
        srun:
          args: [--label, --kill-on-bad-exit]

- when: job.launch.method in ["slurm-hetjob", "slurm-mp-taskset", "slurm-shell"]
  base.context:
    job:
      oifs:
        ntasks: 125
        ntasks_per_node: 128
        omp_num_threads: 1
        omp_stacksize: "64M"
      nemo:
        ntasks: 0
        ntasks_per_node: 0
      amipfr:
        ntasks: 1
        ntasks_per_node: 1
      xios:
        ntasks: 1
        ntasks_per_node: 1

- when: job.launch.method in ["slurm-wrapper-taskset"]
  base.context:
    job:
      oifs:
        omp_num_threads: 1
        omp_stacksize: "64M"
        use_hyperthreads: false
      groups:
        - { nodes: 1, xios: 1, oifs: 125, amipfr: 1}
